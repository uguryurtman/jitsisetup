#!/bin/bash

# -----------------------------------------------------------------------------
# extra for jitsi-jibri-installer
# -----------------------------------------------------------------------------
JIBRI_TMPL=https://raw.githubusercontent.com/jitsi-contrib/installers/main/templates/jibri
JICOFO_CONFIG=/etc/jitsi/jicofo/jicofo.conf
JITSI_MEET_CONFIG=/etc/jitsi/meet/$JITSI_HOST-config.js


# -----------------------------------------------------------------------------
# packages
# -----------------------------------------------------------------------------
out <<< "installing jibri packages..."

if [[ "$DISTRO" = "bullseye" ]]; then
    sed -i "s~ bullseye main$~ bullseye main contrib non-free~" \
        /etc/apt/sources.list
    sed -i "s~ bullseye-updates main$~ bullseye-updates main contrib non-free~" \
        /etc/apt/sources.list
    sed -i "s~ bullseye-security main$~ bullseye-security main contrib non-free~" \
        /etc/apt/sources.list
elif [[ "$DISTRO" = "buster" ]]; then
    sed -i "s~ buster main$~ buster main contrib non-free~" \
        /etc/apt/sources.list
    sed -i "s~ buster-updates main$~ buster-updates main contrib non-free~" \
        /etc/apt/sources.list
    sed -i "s~ buster/updates main$~ buster/updates main contrib non-free~" \
        /etc/apt/sources.list
fi

wget -qO /tmp/google-chrome.gpg.key \
    https://dl.google.com/linux/linux_signing_key.pub
apt-key add /tmp/google-chrome.gpg.key
wget -O /etc/apt/sources.list.d/google-chrome.list \
    $JIBRI_TMPL/etc/apt/sources.list.d/google-chrome.list

apt-get -y --allow-releaseinfo-change update
apt-get $APT_PROXY_OPTION -y install kmod alsa-utils
apt-get $APT_PROXY_OPTION -y install libnss3-tools unzip
apt-get $APT_PROXY_OPTION -y install va-driver-all vdpau-driver-all
apt-get $APT_PROXY_OPTION -y --install-recommends install ffmpeg
apt-get $APT_PROXY_OPTION -y --install-recommends install google-chrome-stable

CHROME_VER=$(dpkg -s google-chrome-stable | egrep "^Version" | \
    cut -d " " -f2 | cut -d. -f1)
CHROMEDRIVER_VER=$(curl -s \
    https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VER)
wget -qO /tmp/chromedriver_linux64.zip \
    https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VER/chromedriver_linux64.zip
unzip -o /tmp/chromedriver_linux64.zip -d /usr/local/bin/
chmod 755 /usr/local/bin/chromedriver

apt-get $APT_PROXY_OPTION -y install x11vnc
apt-get $APT_PROXY_OPTION -y install jibri

apt-get -y purge upower
apt-get -y --purge autoremove

# jibri packages are ok
timeout 8 curl -s "$CHECKMYPORT?proto=udp&port=60000&text=ok-package-jibri" \
    >/dev/null || true


# -----------------------------------------------------------------------------
# configuration
# -----------------------------------------------------------------------------
out <<< "installing jibri configuration..."

# snd_aloop
[[ -z "$(egrep '^snd_aloop' /etc/modules)" ]] && echo snd_aloop >>/etc/modules

# hosts
sed -i -E "s/(\s)$JITSI_HOST/\1/" /etc/hosts
sed -i -E "/^[0-9.]+\s*$/d" /etc/hosts
sed -i "/127.0.2.1\s/d" /etc/hosts
sed -i "$ a 127.0.2.1 $JITSI_HOST" /etc/hosts

# google chrome
mkdir -p /etc/opt/chrome/policies/managed
wget -O /etc/opt/chrome/policies/managed/jibri_policies.json \
    $JIBRI_TMPL/etc/opt/chrome/policies/managed/jibri_policies.json

# prosody
wget -O /etc/prosody/conf.avail/recorder.$JITSI_HOST.cfg.lua \
    $JITSI_TMPL/etc/prosody/conf.avail/recorder.cfg.lua
sed -i "s/___JITSI_HOST___/$JITSI_HOST/" \
    /etc/prosody/conf.avail/recorder.$JITSI_HOST.cfg.lua
ln -s ../conf.avail/recorder.$JITSI_HOST.cfg.lua /etc/prosody/conf.d/
systemctl restart prosody.service

# prosody register
PASSWD1=$(openssl rand -hex 20)
PASSWD2=$(openssl rand -hex 20)

prosodyctl unregister jibri auth.$JITSI_HOST || true
prosodyctl register jibri auth.$JITSI_HOST $PASSWD1
prosodyctl unregister recorder recorder.$JITSI_HOST || true
prosodyctl register recorder recorder.$JITSI_HOST $PASSWD2

# jicofo
hocon -f $JICOFO_CONFIG \
    set jicofo.jibri.brewery-jid "\"JibriBrewery@internal.auth.$JITSI_HOST\""
hocon -f $JICOFO_CONFIG \
    set jicofo.jibri.pending-timeout "90 seconds"
systemctl restart jicofo.service

# jitsi-meet config
sed -i 's~//\s*fileRecordingsEnabled.*~fileRecordingsEnabled: true,~' \
    $JITSI_MEET_CONFIG
sed -i 's~//\s*fileRecordingsServiceSharingEnabled.*~fileRecordingsServiceSharingEnabled: true,~' \
    $JITSI_MEET_CONFIG
sed -i 's~//\s*liveStreamingEnabled:.*~liveStreamingEnabled: true,~' \
    $JITSI_MEET_CONFIG
sed -i "/liveStreamingEnabled:/a \\\n    hiddenDomain: 'recorder.$JITSI_HOST'," \
    $JITSI_MEET_CONFIG

# icewm
mkdir -p /home/jibri/.icewm
wget -O /home/jibri/.icewm/startup $JIBRI_TMPL/home/jibri/.icewm/startup
chmod 755 /home/jibri/.icewm/startup

# jibri
usermod -aG adm,audio,video,plugdev jibri
mkdir -p /usr/local/recordings
chown jibri:jibri /usr/local/recordings -R

wget -O /etc/jitsi/jibri/jibri.conf $JIBRI_TMPL/etc/jitsi/jibri/jibri.conf
sed -i "s/___JITSI_HOST___/$JITSI_HOST/" /etc/jitsi/jibri/jibri.conf
sed -i "s/___PASSWD1___/$PASSWD1/" /etc/jitsi/jibri/jibri.conf
sed -i "s/___PASSWD2___/$PASSWD2/" /etc/jitsi/jibri/jibri.conf

wget -O /usr/local/bin/finalize_recording.sh \
    $JIBRI_TMPL/usr/local/bin/finalize_recording.sh
chmod 755 /usr/local/bin/finalize_recording.sh

wget -O /usr/local/bin/ffmpeg $JIBRI_TMPL/usr/local/bin/ffmpeg
chmod 755 /usr/local/bin/ffmpeg

systemctl daemon-reload
systemctl enable jibri.service
systemctl start jibri.service

# jibri, recorded file link as a private message
wget -O /usr/share/jitsi-meet/body.html \
    $JIBRI_TMPL/usr/share/jitsi-meet/body.html
sed -i "s/___JITSI_HOST___/$JITSI_HOST/" /usr/share/jitsi-meet/body.html

# jibri, vnc
mkdir -p /home/jibri/.vnc
x11vnc -storepasswd jibri /home/jibri/.vnc/passwd
chown jibri:jibri /home/jibri/.vnc -R

# jibri configuration is ok
timeout 8 curl -s "$CHECKMYPORT?proto=udp&port=60000&text=ok-conf-jibri" \
    >/dev/null || true


# -----------------------------------------------------------------------------
# completed
# -----------------------------------------------------------------------------
# jibri completed
timeout 8 curl -s "$CHECKMYPORT?proto=udp&port=60000&text=ok-jibri" \
    >/dev/null || true
